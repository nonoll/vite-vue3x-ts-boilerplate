/**
 * This file was auto-generated by openapi-typescript.
 * Do not make direct changes to the file.
 */

export interface paths {
  '/monitor/l7check': {
    get: operations['healthCheckUsingGET'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/annual-leave-base-dates': {
    get: operations['retrieveAnnualLeaveOdmBaseUsingGET'];
    put: operations['updateAnnualLeaveOdmBaseDateUsingPUT'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/annual-leave-rules': {
    get: operations['retrieveAnnualLeaveRuleUsingGET'];
    put: operations['annualLeaveCudUsingPUT'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/annual-leaves': {
    get: operations['retrieveAnnualLeaveUsingGET'];
    put: operations['updateAnnualLeaveUsingPUT'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/annual-leaves/create': {
    post: operations['createAnnualLeaveUsingPOST'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/annual-leaves/create/batch': {
    post: operations['createAnnualLeaveBatchUsingPOST'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/annual-leaves/simulate': {
    get: operations['simulateAnnualLeaveUsingGET'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/calendar-days': {
    get: operations['getDaysUsingGET'];
    put: operations['updateDaysUsingPUT'];
    post: operations['insertDaysUsingPOST'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/off-duties': {
    get: operations['retrieveAttendCodeUsingGET'];
    put: operations['updateAttendCodeUsingPUT'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/off-duty-applications': {
    get: operations['retrieveUsageHistoryLeaveOccurUsingGET'];
    put: operations['updateScheduleDetailUsingPUT'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/off-duty-codes': {
    get: operations['retrieveAttendCodeUsingGET_1'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/overtime-exceptions': {
    get: operations['retrieveSpecialLeaveUsingGET_1'];
    put: operations['executeBySaveStatusUsingPUT_1'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/overtimes': {
    get: operations['retrieveOvertimeHistoryUsingGET'];
    put: operations['updateOvertimeHistoryUsingPUT'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/special-leaves': {
    get: operations['retrieveSpecialLeaveUsingGET'];
    put: operations['executeBySaveStatusUsingPUT'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/work-schedule-change-applications': {
    /** 근무시간 변경신청 이력을 조회한다. */
    get: operations['getWorkingTimeApplyHistoryUsingGET'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/work-schedules': {
    /** 근무시간 이력을 조회한다. */
    get: operations['getWorkSchedulesUsingGET'];
    /** 근무시간 이력을 수정한다. */
    put: operations['updateWorkSchedulesUsingPUT'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/work-type-bases': {
    /** 개인별 근무유형 조회 */
    get: operations['getWorkTypeBasesUsingGET'];
    /** 개인별 근무유형 수정 */
    put: operations['updateWorkTypeBasesUsingPUT'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/work-types': {
    /** 근무유형 조회 */
    get: operations['getWorkTypesUsingGET'];
    /** 근무유형 추가 */
    post: operations['insertUsingPOST'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/work-types/{workTypeId}': {
    /** 근무유형 수정 */
    put: operations['updateUsingPUT'];
    /** 근무유형 삭제 */
    delete: operations['deleteUsingDELETE'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/working-time-change-applications': {
    /** 츨/퇴근 변경신청 이력을 조회한다. */
    get: operations['getWorkingTimeApplyHistoryUsingGET_1'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/working-time-rules': {
    /** 출퇴근 기준을 조회한다. */
    get: operations['getWorkingTimeRulesUsingGET'];
    /** 출퇴근 기준 내용을 수정한다. */
    put: operations['updateWorkingTimeRuleUsingPUT'];
  };
  '/work-schedule/v1/admin/tenants/{domain}/working-times': {
    /** 츨/퇴근 이력을 조회한다. */
    get: operations['getWorkingTimeHistoryUsingGET'];
    /** 츨/퇴근 이력을 수정한다. */
    put: operations['updateWorkingTimesUsingPUT'];
  };
  '/work-schedule/v1/inner/tenants/{domain}': {
    delete: operations['deleteTenantUsingDELETE'];
  };
  '/work-schedule/v1/inner/tenants/{domain}/annual-leaves/create/batch': {
    post: operations['createAnnualLeaveBatchUsingPOST_1'];
  };
  '/work-schedule/v1/inner/tenants/{domain}/approvals': {
    /** 문서 action 처리 */
    put: operations['doProcessApprovalUsingPUT'];
  };
  '/work-schedule/v1/inner/tenants/{domain}/organizations/{organizationId}': {
    delete: operations['deleteOrganizationUsingDELETE'];
  };
  '/work-schedule/v1/inner/tenants/{domain}/organizations/{organizationId}/unuse': {
    post: operations['unusedOrganizationUsingPOST'];
  };
  '/work-schedule/v1/inner/tenants/{domain}/organizations/{organizationId}/use': {
    post: operations['createOrganizationUsingPOST'];
  };
  '/work-schedule/v1/inner/tenants/{domain}/unuse': {
    post: operations['unusedTenantUsingPOST'];
  };
  '/work-schedule/v1/manager/tenants/{domain}/off-duty-applications': {
    get: operations['retrieveOffDutyForManagerUsingGET'];
  };
  '/work-schedule/v1/manager/tenants/{domain}/overtimes': {
    get: operations['retrieveOvertimeHistoryUsingGET_1'];
  };
  '/work-schedule/v1/manager/tenants/{domain}/work-schedules': {
    /** 근무시간 이력을 조회한다. */
    get: operations['getWorkSchedulesUsingGET_2'];
  };
  '/work-schedule/v1/manager/tenants/{domain}/working-times': {
    /** 부서별 츨/퇴근 이력을 조회한다. */
    get: operations['getWorkingTimeHistoryUsingGET_1'];
  };
  '/work-schedule/v1/tenants/{domain}/calendar-days': {
    get: operations['getDaysUsingGET_1'];
  };
  '/work-schedule/v1/tenants/{domain}/code-groups': {
    /** code 조회 */
    get: operations['getCodeGroupsUsingGET'];
  };
  '/work-schedule/v1/tenants/{domain}/departments': {
    get: operations['getSubDepartmentsUsingGET'];
  };
  '/work-schedule/v1/tenants/{domain}/documentCodes/{documentCode}/approvals/{approvalId}': {
    /** 본문조회 */
    get: operations['getContentsUsingGET'];
  };
  '/work-schedule/v1/tenants/{domain}/members/{memberId}/overtime-applications': {
    post: operations['saveOvertimeApplyUsingPOST'];
  };
  '/work-schedule/v1/tenants/{domain}/members/{memberId}/overtime-remain-hours': {
    get: operations['getOvertimeRemainHoursUsingGET'];
  };
  '/work-schedule/v1/tenants/{domain}/off-duties': {
    get: operations['getOffDutiesUsingGET'];
  };
  '/work-schedule/v1/tenants/{domain}/off-duty-applications': {
    get: operations['retrieveScheduleDetailUsingGET'];
    post: operations['saveOffDutyUsingPOST'];
  };
  '/work-schedule/v1/tenants/{domain}/off-duty-applications/cancel': {
    post: operations['attendanceCancelRequestUsingPOST'];
  };
  '/work-schedule/v1/tenants/{domain}/off-duty-details': {
    get: operations['retrieveOffDutyDetailsUsingGET'];
  };
  '/work-schedule/v1/tenants/{domain}/off-duty-reports': {
    get: operations['retrieveOffDutyUsingGET'];
  };
  '/work-schedule/v1/tenants/{domain}/overtime-rules': {
    get: operations['getOvertimeRulesForApplyUsingGET'];
  };
  '/work-schedule/v1/tenants/{domain}/overtimes': {
    get: operations['getOffDutiesUsingGET_1'];
  };
  '/work-schedule/v1/tenants/{domain}/work-schedule-change': {
    /** 근무시간 변경 정보 조회 */
    get: operations['differenceWorkscheduleUsingGET'];
  };
  '/work-schedule/v1/tenants/{domain}/work-schedule-change-applications': {
    /** 근무시간 시간변경 요청 */
    post: operations['applyWorkScheduleChangeUsingPOST'];
  };
  '/work-schedule/v1/tenants/{domain}/work-schedule-details': {
    /** 우리부서 근무시간 조회 */
    get: operations['getWorkScheduleDetailsUsingGET'];
  };
  '/work-schedule/v1/tenants/{domain}/work-schedule-resports': {
    /** 근무시간 집계 조회 */
    get: operations['getWorkScheduleReportsUsingGET'];
  };
  '/work-schedule/v1/tenants/{domain}/work-schedule-rules': {
    /** 근무시간 기준 조회 */
    get: operations['getWorkScheduleRulesUsingGET'];
  };
  '/work-schedule/v1/tenants/{domain}/work-schedule-weekly-resports': {
    /** 근무시간 주간 집계 조회 */
    get: operations['getWorkScheduleWeeklyReportsUsingGET'];
  };
  '/work-schedule/v1/tenants/{domain}/work-schedules': {
    /** 근무시간 조회 */
    get: operations['getWorkSchedulesUsingGET_1'];
  };
  '/work-schedule/v1/tenants/{domain}/work-types': {
    /** 근무유형을 조회한다 */
    get: operations['getWorkTypeUsingGET'];
  };
  '/work-schedule/v1/tenants/{domain}/working-time-change-applications': {
    /** 출/퇴근 시간변경 요청 */
    post: operations['applyWorkingTimeChangeUsingPOST'];
  };
  '/work-schedule/v1/tenants/{domain}/working-time-rules': {
    /** 츨/퇴근 기준 조회 */
    get: operations['getWorkingTimeRulesUsingGET_1'];
  };
  '/work-schedule/v1/tenants/{domain}/working-times': {
    /** 출/퇴근 데이터 조회 */
    get: operations['getWorkingTimeUsingGET'];
    /** 츨/퇴근 요청 */
    post: operations['saveWorkingTimeUsingPOST'];
  };
}

export interface definitions {
  AnnualLeaveOccurCreateRequest: {
    /** 기준일 */
    baseDate: string;
    /** 사용자 id */
    memberId?: string;
    /** 조직 id */
    organizationId: string;
  };
  AnnualLeaveOccurRetrieveResponse: {
    /** 소속명 */
    departmentNm?: string;
    /** 기준 종료일 */
    endDate?: string;
    /** 보건휴가 발생일 */
    healthOccurDays?: number;
    /** 보건휴가 사용일 */
    healthOccurUseDays?: number;
    /** 사용자 id */
    memberId?: string;
    /** 사용자 이름 */
    memberNm?: string;
    /** 사번 */
    memberNo?: string;
    /** 비고 */
    note?: string;
    /** 휴가 발생 시간 */
    occurNum?: number;
    /** 연차기산일 */
    odmBaseDate?: string;
    /** 보건 휴가 Id */
    odmSpecialLeaveId?: string;
    /** 조직 id */
    organizationId?: string;
    /** 조직명 */
    organizationNm?: string;
    /** 호칭 */
    positionNm?: string;
    /** 남은 휴가 시간 */
    remainNum?: number;
    /** 기준 시작일 */
    staDate?: string;
    /** 재직구분 */
    statusCd?: 'MEMBER' | 'LEAVED';
    /** 휴가 사용 시간 */
    useNum?: number;
  };
  AnnualLeaveOccurSimulateResponse: {
    /** 연차기산일 */
    odmBaseDate?: string;
    /** 연차발생일 */
    odmOccurDate?: string;
    /** N연차 */
    yearCnt?: number;
    /** 기본 연차 */
    occurBaseNum?: number;
    /** 가산 연차 */
    additionalOccurNum?: number;
    /** 1년차 잔여 이월 연차 */
    firstYearCarryNum?: number;
    /** 발생한도 제한 */
    occurLimitNum?: number;
    /** 1년차 추가발생 연차 */
    firstAdditionalOccurNum?: number;
    /** 1년차 추가발생 시작년월 */
    firstAdditionalStaYearMonth?: string;
    /** 1년차 추가발생 종료년월 */
    firstAdditionalEndYearMonth?: string;
    /** 연차 기준년도 */
    baseYear?: string;
    /** 연차 사용 시작일자 */
    yearStaDate?: string;
    /** 연차 사용 종료일자 */
    yearEndDate?: string;
    /** 생성 연차 */
    occurNum?: number;
    /** 생성 보건 연차 */
    occurHealthNum?: number;
  };
  AnnualLeaveOccurUpdateRequest: {
    /** HTTP Method */
    saveStatus?: 'UPDATE' | 'DELETE';
    /** 사용자 id */
    memberId?: string;
    /** 시작일(기준일) */
    staDate?: string;
    /** 종료일 */
    endDate?: string;
    /** 발생 시간 */
    occurNum?: number;
    /** 사용 시간 */
    useNum?: number;
    /** 비고 */
    note?: string;
    /** 특별휴가 id */
    odmSpecialLeaveId?: string;
    /** 보건휴가 발생일 */
    healthOccurDays?: number;
    /** 보건휴가 사용일 */
    healthOccurUseDays?: number;
  };
  AnnualLeaveOdmBaseRetrieveResponse: {
    /** 조직 이름 */
    organizationNm?: string;
    /** 고용 형태 코드 */
    employmentTypeId?: string;
    /** 사용자 id */
    memberId?: string;
    /** 사용자 이름 */
    memberNm?: string;
    /** 연차기산일 */
    odmBaseDate?: string;
    /** 비고 */
    note?: string;
  };
  AnnualLeaveOdmBaseUpdateRequest: {
    /** 데이터 처리 Flag */
    saveStatus: 'INSERT' | 'UPDATE' | 'DELETE' | 'READ';
    /** 사용자 id */
    memberId?: string;
    /** 연차기산일 */
    odmBaseDate?: string;
    /** 비고 */
    note?: string;
  };
  AnnualLeaveRuleCudRequest: {
    /** HTTP Method */
    saveStatus?: 'INSERT' | 'UPDATE' | 'DELETE';
    /** 조직 아이디 */
    organizationId?: string;
    /** 고용 형태 */
    employmentTypeId?: string;
    /** 연차 발생 기준 > 연차 발생일 */
    occurTypeCd?: 'YEARLY_BASE_YMD' | 'YEARLY_FIRST_YMD';
    /** 연차 발생 기준 > 가산연차 발생 시점 */
    firstAddTypeCd?: 'EMPTY' | 'AFTER_2YEARS' | 'AFTER_3YEARS';
    /** 연차 발생 기준 > 최대 발생일 수 */
    occurMaxDays?: number;
    /** 입사 후 1년 연차 발생 > 최초 발생 */
    firstYearInitTypeCd?: 'EMPTY' | 'ONE' | 'ELEVEN' | 'BY_MONTHLY';
    /** 입사 후 1년 연차 발생 > 추가 발생 유형 */
    firstYearAddTypeCd?: 'EMPTY' | 'MONTHLY_FIRST_DAY' | 'BY_12_FIRST_DAY' | 'MONTHLY_BASE_DAY' | 'BY_12_BASE_DAY';
    /** 입사 후 1년 연차 발생 > 1년차 연차 2년차로 이월 여부 */
    firstYearCarryYn?: string;
    /** 보건휴가 > 발생일 수 */
    healthOccurDays?: number;
    /** 보건휴가 > 적용 대상 */
    healthOccurGenderTypeCd?: 'M' | 'F';
    /** 사용 여부 */
    useYn?: string;
    /** 비고 */
    note?: string;
  };
  AnnualLeaveRuleRetrieveResponse: {
    /** 조직 id */
    organizationId?: string;
    /** 고용 형태 */
    employmentTypeId?: string;
    /** 연차 발생 기준 > 연차 발생일 */
    occurTypeCd?: 'YEARLY_BASE_YMD' | 'YEARLY_FIRST_YMD';
    /** 연차 발생 기준 > 가산연차 발생 시점 */
    firstAddTypeCd?: 'EMPTY' | 'AFTER_2YEARS' | 'AFTER_3YEARS';
    /** 연차 발생 기준 > 최대 발생일 수 */
    occurMaxDays?: number;
    /** 입사 후 1년 연차 발생 > 최초 발생 */
    firstYearInitTypeCd?: 'EMPTY' | 'ONE' | 'ELEVEN' | 'BY_MONTHLY';
    /** 입사 후 1년 연차 발생 > 추가 발생 유형 */
    firstYearAddTypeCd?: 'EMPTY' | 'MONTHLY_FIRST_DAY' | 'BY_12_FIRST_DAY' | 'MONTHLY_BASE_DAY' | 'BY_12_BASE_DAY';
    /** 입사 후 1년 연차 발생 > 1년차 연차 2년차로 이월 여부 */
    firstYearCarryYn?: string;
    /** 보건휴가 > 발생일 수 */
    healthOccurDays?: number;
    /** 보건휴가 > 적용 대상 */
    healthOccurGenderTypeCd?: 'M' | 'F';
    /** 사용 여부 */
    useYn?: string;
    /** 비고 */
    note?: string;
  };
  ApiHeader: {
    isSuccessful?: boolean;
    resultCode?: number;
    resultMessage?: string;
  };
  ApiResponse: {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: {[key: string]: unknown};
  };
  'ApiResponses<AnnualLeaveOccurRetrieveResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['AnnualLeaveOccurRetrieveResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<AnnualLeaveOdmBaseRetrieveResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['AnnualLeaveOdmBaseRetrieveResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<AnnualLeaveRuleRetrieveResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['AnnualLeaveRuleRetrieveResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<AttendCodeRetrieveResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['AttendCodeRetrieveResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<AttendCodeUpdateResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['AttendCodeUpdateResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<CalendarResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['CalendarResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<CodeGroupResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['CodeGroupResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<DepartmentResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['DepartmentResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<OffDutyForManagerResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['OffDutyForManagerResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<OffDutyResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['OffDutyResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<OvertimeDepartmentHistoryRetrieveResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['OvertimeDepartmentHistoryRetrieveResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<OvertimeExcptRetrieveResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['OvertimeExcptRetrieveResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<OvertimeHistoryRetrieveResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['OvertimeHistoryRetrieveResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<OvertimeResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['OvertimeResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<ScheduleDetailUsageHistoryResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['ScheduleDetailUsageHistoryResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<SpecialLeaveHistoryResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['SpecialLeaveHistoryResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<WorkScheduleApplyHistoryResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['WorkScheduleApplyHistoryResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<WorkScheduleDepartmentHistoryResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['WorkScheduleDepartmentHistoryResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<WorkScheduleDetailResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['WorkScheduleDetailResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<WorkScheduleHistoryResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['WorkScheduleHistoryResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<WorkScheduleReportForWeeklyResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['WorkScheduleReportForWeeklyResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<WorkScheduleResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['WorkScheduleResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<WorkTypeAllRulesResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['WorkTypeAllRulesResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<WorkTypeBaseResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['WorkTypeBaseResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<WorkingTimeApplyHistoryResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['WorkingTimeApplyHistoryResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<WorkingTimeHistoryResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['WorkingTimeHistoryResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponses<WorkingTimeResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['WorkingTimeResponse'][];
    /** 총 갯수 */
    totalCount?: number;
  };
  'ApiResponse<AnnualLeaveOccurSimulateResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['AnnualLeaveOccurSimulateResponse'];
  };
  'ApiResponse<OffDutyDetailResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['OffDutyDetailResponse'];
  };
  'ApiResponse<OffDutyIntegrationResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['OffDutyIntegrationResponse'];
  };
  'ApiResponse<OffDutyReportsResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['OffDutyReportsResponse'];
  };
  'ApiResponse<OvertimeRemainResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['OvertimeRemainResponse'];
  };
  'ApiResponse<OvertimeRuleResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['OvertimeRuleResponse'];
  };
  'ApiResponse<Void>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
  };
  'ApiResponse<WorkScheduleDifferenceResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['WorkScheduleDifferenceResponse'];
  };
  'ApiResponse<WorkScheduleReportResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['WorkScheduleReportResponse'];
  };
  'ApiResponse<WorkScheduleRulesResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['WorkScheduleRulesResponse'];
  };
  'ApiResponse<WorkTypeResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['WorkTypeResponse'];
  };
  'ApiResponse<WorkingTimeRuleResponse>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: definitions['WorkingTimeRuleResponse'];
  };
  'ApiResponse<object>': {
    /** 응답 헤더 */
    header?: definitions['ApiHeader'];
    /** 응답 내용 */
    result?: {[key: string]: unknown};
  };
  /** 결재 문서 정보 */
  ApprovalRequest: {
    actionType?: string;
    actorDepartmentId?: string;
    actorId?: string;
    approvalDocumentNumber?: string;
    approvalDocumentStatus?: 'DISPOSAL' | 'PROGRESS' | 'RETURN' | 'COMPLETION' | 'TEMPORARY';
    approvalId?: string;
    completionDocument?: boolean;
    contentsMap?: {[key: string]: unknown};
    contentsString?: string;
    documentCode?: 'WORK001' | 'WORK002' | 'WORK003' | 'WORK004' | 'WORK005' | 'WORK006' | 'WORK007';
    documentId?: string;
    drafterDepartmentId?: string;
    drafterId?: string;
  };
  /** 근태 조회 */
  AttendCodeIntegrationInnerResponse: {
    /** 근태 Id */
    odmScheduleDetailId?: string;
    /** 전자결재 id */
    aprvId?: string;
    /** 근태 유형 */
    attendNm?: string;
    /** 시작 일자 */
    attStaDate?: string;
    /** 종료 일자 */
    attEndDate?: string;
    /** 사용 시간 */
    useNum?: number;
    /** 사용 시간 단위 */
    useTypeCd?: 'HOUR' | 'DAY';
    /** 사유 */
    applyReason?: string;
  };
  /** 근태 종류 */
  AttendCodeReportsResponse: {
    /** 근태 코드 */
    attendCd?: string;
    /** 근태명 */
    attendNm?: string;
    /** 근태 유형 */
    attendTypeCd?: 'DEDUCT_LEAVE' | 'SPECIAL_LEAVE' | 'HEALTH_LEAVE' | 'ETC';
    /** 사용 단위 */
    useTypeCd?: 'HOUR' | 'DAY';
  };
  AttendCodeRequest: {
    /** HTTP Method */
    saveStatus?: 'INSERT' | 'UPDATE' | 'DELETE';
    /** 조직 아이디 */
    organizationId?: string;
    /** 근태 유형 코드 */
    attendCd?: string;
    /** 근태 유형 명칭 */
    attendNm?: string;
    /** 연차 차감 여부 */
    attendTypeCd?: 'DEDUCT_LEAVE' | 'SPECIAL_LEAVE' | 'HEALTH_LEAVE' | 'ETC';
    /** 사용 여부 */
    useYn?: 'Y' | 'N';
    /** 근태 최소 신청 단위 */
    minUseHours?: number;
    /** 근태 최대 신청 단위 */
    maxUseHours?: number;
    /** 비고 */
    note?: string;
  };
  /** 근태 종류 */
  AttendCodeRetrieveResponse: {
    /** 조직 id */
    organizationId?: string;
    /** 근태 코드 */
    attendCd?: string;
    /** 근태명 */
    attendNm?: string;
  };
  AttendCodeUpdateResponse: {
    /** 조직 아이디 */
    organizationId?: string;
    /** 근태 유형 코드 */
    attendCd?: string;
    /** 근태 유형 명칭 */
    attendNm?: string;
    /** 연차 차감 여부 */
    attendTypeCd?: 'DEDUCT_LEAVE' | 'SPECIAL_LEAVE' | 'HEALTH_LEAVE' | 'ETC';
    /** 사용 여부 */
    useYn?: 'Y' | 'N';
    /** 근태 유형의 신청 가능한 최소 시간 */
    minUseHours?: number;
    /** 근태 유형의 신청 가능한 최대 시간 */
    maxUseHours?: number;
    /** 비고 */
    note?: string;
  };
  /** 근태 취소 신청 */
  AttendanceCancelRequestContents: {
    /** 근태 취소 사유 */
    cancelReason: string;
    /** 비고 */
    note?: string;
    /** 근태 id */
    odmScheduleDetailId: string;
  };
  /** 캘린더 조회 */
  CalendarResponse: {
    /** 일자 */
    date: string;
    /** 법인id */
    organizationId: string;
    /** 법인명 */
    organizationNm: string;
    /** 휴일여부 */
    holidayYn: string;
    /** 휴일출력명 */
    holidayNm: string;
  };
  CalendarSave: {
    /** 데이터 처리 Flag */
    saveStatus: 'UPDATE';
    /** 조직 ID */
    organizationId: string;
    /** 일자 */
    date: string;
    /** 휴일여부 */
    holidayYn: string;
    /** 휴일출력명 */
    holidayNm?: string;
  };
  /** 달력관리 저장 */
  CalendarSaveRequest: {
    days?: definitions['CalendarSave'][];
  };
  /** code group 조회 */
  CodeGroupResponse: {
    /** code list */
    codes?: definitions['CodeResponse'][];
    /** code group id */
    groupId?: string;
    /** code group name */
    groupName?: string;
  };
  /** code group 조회 */
  CodeResponse: {
    /** code */
    code?: string;
    /** code명 */
    codeName?: string;
    /** 순서 */
    order?: number;
  };
  /** 출퇴근 시간 변경 요청 */
  CommuteChangeContents: {
    /** 변경 신청 사유 */
    applyReason?: string;
    /** 기준 일자 */
    baseDate?: string;
    /** 변경할 출근시간 */
    changeEnterTime?: string;
    /** 변경할 퇴근시간 */
    changeLeaveTime?: string;
    /** 상신 일자 */
    draftDate?: string;
    /** 기존 출근시간 */
    enterTime?: string;
    /** 기존 퇴근시간 */
    leaveTime?: string;
  };
  Data: {
    /** 데이터 처리 Flag */
    saveStatus: 'INSERT' | 'UPDATE' | 'DELETE' | 'READ';
    /** 조직 멤버 ID */
    memberId: string;
    /** 기준일자 */
    date: string;
    /** 출근 시간 */
    staTime: string;
    /** 퇴근 시간 */
    endTime: string;
    /** 비고 */
    note?: string;
  };
  /** 소속 department 조회 */
  DepartmentResponse: {
    /** 부서id */
    departmentId?: string;
    /** 부서명 */
    departmentNm?: string;
    /** 조직장 여부 */
    leaderYn?: string;
  };
  /** 근태 상세 조회 응답 객체 */
  OffDutyDetailResponse: {
    /** 근태 */
    odmScheduleDetailId?: string;
    /** 사용 단위 */
    useTypeCd?: 'HOUR' | 'DAY';
    /** 근태명 */
    attendNm?: string;
    /** 시작 일자 */
    attStaDate?: string;
    /** 시작 시간 */
    attStaTime?: string;
    /** 종료 일자 */
    attEndDate?: string;
    /** 종료 시간 */
    attEndTime?: string;
    /** 근태 사유 */
    applyReason?: string;
  };
  /** 부서장 응답 객체 */
  OffDutyForManagerResponse: {
    /** 근태 사유 */
    applyReason?: string;
    /** 근태 종료일 */
    attEndDate?: string;
    /** 근태 종료 시간 */
    attEndTime?: string;
    /** 근태 시작일 */
    attStaDate?: string;
    /** 근태 시작 시간 */
    attStaTime?: string;
    /** 근태명 */
    attendNm?: string;
    /** 부서 이름 */
    departmentNm?: string;
    /** 사용자 이름 */
    memberNm?: string;
    /** 업무 구분명 */
    title?: string;
    /** 사용 단위 */
    useTypeCd?: 'HOUR' | 'DAY';
  };
  /** 근태 조회 */
  OffDutyIntegrationResponse: {
    attendList?: definitions['AttendCodeIntegrationInnerResponse'][];
    /** 종료일 */
    endDate?: string;
    /** 보건 휴가 발생 */
    healthOccurDays?: number;
    /** 보건 휴가 잔여 */
    healthRemainDays?: number;
    /** 총 연차 */
    occurNum?: number;
    /** 연차 잔여 */
    remainNum?: number;
    /** 특별 휴가 발생 */
    specialLeaveOccurNum?: number;
    /** 특별 휴가 잔여 */
    specialLeaveRemainNum?: number;
    /** 시작일 */
    staDate?: string;
    /** 연차 사용 */
    useNum?: number;
  };
  /** 잔여 휴가 시간 반환 객체 */
  OffDutyReportsResponse: {
    /** 남은 휴가 시간 */
    remainNum?: number;
    /** 근태 종류 */
    attendList?: definitions['AttendCodeReportsResponse'][];
  };
  /** 근태 데이터 조회 */
  OffDutyResponse: {
    /** 근태명 */
    attendNm: string;
    /** 근태 시작일 */
    attStaDateTime: string;
    /** 근태 종료일 */
    attEndDateTime: string;
    /** 근태유형 */
    attendTypeCd: 'DEDUCT_LEAVE' | 'SPECIAL_LEAVE' | 'HEALTH_LEAVE' | 'ETC';
  };
  OverTimeCarfareDto: {
    odmCarfareStdId?: string;
    /** 초과근무 유형 코드 */
    overtimeTypeCd: 'WEEKDAY' | 'HOLIDAY';
    /** 교통비 지급 기준 코드 */
    carfareTypeCd: 'PER' | 'AFTER';
    /** 실제 기준 시간코드 */
    hourTypeCd:
      | '00'
      | '01'
      | '02'
      | '03'
      | '04'
      | '05'
      | '06'
      | '07'
      | '08'
      | '09'
      | '10'
      | '11'
      | '12'
      | '13'
      | '14'
      | '15'
      | '16'
      | '17'
      | '18'
      | '19'
      | '20'
      | '21'
      | '22'
      | '23';
    /** 지급 금액 */
    carfare: number;
  };
  OvertimeDepartmentHistoryRetrieveResponse: {
    /** 신청사유 */
    applyReason?: string;
    /** 휴게시간 */
    breakHHmm?: string;
    /** 조직명 */
    departmentNm?: string;
    /** 휴일근무시간 */
    holidayHHmm?: string;
    /** 성명 */
    memberNm?: string;
    /** 야간근무시간 */
    nightOvertimeHHmm?: string;
    /** 연장근무시간 */
    overtimeHHmm?: string;
    /** 근무유형 */
    title?: string;
    /** 총근무시간 */
    totalHHmm?: string;
    /** 근무종료일(신청) */
    workEndDate?: string;
    /** 근무종료시간(신청) */
    workEndTime?: string;
    /** 근무시작일(신청) */
    workStaDate?: string;
    /** 근무시작시간(신청) */
    workStaTime?: string;
  };
  OvertimeDto: {
    /** 초과근무 유형 코드 */
    overtimeTypeCd: 'WEEKDAY' | 'HOLIDAY';
    /** 연장근무 누적 단위 */
    sumTypeCd: 'WEEKLY' | 'MONTHLY';
    /** 최대 초과 근무 시간 */
    maxOvertimeHours: number;
    /** 최대 야간 근무 시간 */
    maxNightHours: number;
    /** 초과근무 포함 여부 */
    overtimeIncludeYn: string;
    /** 연장근로 시작시각 유형 */
    overtimeStaHmTypeCd: 'AFTER_16' | 'AFTER_LEAVE';
    /** 연장근로 종료시각 유형 */
    overtimeEndHmTypeCd:
      | '00'
      | '01'
      | '02'
      | '03'
      | '04'
      | '05'
      | '06'
      | '07'
      | '08'
      | '09'
      | '10'
      | '11'
      | '12'
      | '13'
      | '14'
      | '15'
      | '16'
      | '17'
      | '18'
      | '19'
      | '20'
      | '21'
      | '22'
      | '23';
    /** 연장근로 입력 단위 */
    applyHmTypeCd: '10MIN' | '30MIN' | '60MIN';
    /** 최소 신청 시간 */
    minApplyHours: number;
    /** 최대 신청 시간 */
    maxApplyHours: number;
    /** 저녁 휴게시간 포함 여부 */
    dinnerBreakIncludeYn: string;
    /** 휴게시간 유형 */
    guaranteedBreakTypeCd: 'NONE' | 'A' | 'B';
    /** 연장근로 보상 유형 */
    rewardTypeCd: 'CARFARE' | 'ALLOWANCE' | 'SPECIAL_LEAVE';
    /** 연장근무 사후 신청 가능일 */
    afterApplyDays: number;
  };
  OvertimeExcptRetrieveResponse: {
    /** 소속명 */
    departmentNm?: string;
    /** 종료일자 */
    endDate?: string;
    /** 휴일근로 최대 시간 */
    maxHolidayHours?: number;
    /** 야간근로 최대 시간 */
    maxNightHours?: number;
    /** 연장근로 최대 시간 */
    maxOvertimeHours?: number;
    /** 사용자 id */
    memberId?: string;
    /** 사용자 이름 */
    memberNm?: string;
    /** 사번 */
    memberNo?: string;
    /** 비고 */
    note?: string;
    /** 조직 ID */
    organizationId?: string;
    /** 조직명 */
    organizationNm?: string;
    /** 시작일자 */
    staDate?: string;
  };
  /** 연장근무 예외 저장 */
  OvertimeExcptSaveRequest: {
    /** 데이터 처리 Flag */
    saveStatus: 'INSERT' | 'UPDATE' | 'DELETE' | 'READ';
    /** 사용자 id */
    memberId: string;
    /** 법인 id */
    organizationId: string;
    /** 연장근무 예외 시작일 */
    staDate: string;
    /** 연장근무 예외 종료일 */
    endDate: string;
    /** 연장근로 최대 시간 */
    maxOvertimeHours: number;
    /** 야간근로 최대 시간 */
    maxNightHours: number;
    /** 휴일근로 최대 시간 */
    maxHolidayHours: number;
    /** 비고 */
    note?: string;
  };
  OvertimeHistoryRetrieveResponse: {
    /** 신청사유 */
    applyReason?: string;
    /** 결재ID */
    aprvId?: string;
    /** 휴게시간 */
    breakHHmm?: string;
    /** 결재완료일자 */
    completeDate?: string;
    /** 조직명 */
    departmentNm?: string;
    /** 문서번호 */
    docNo?: string;
    /** 상신일자 */
    draftDate?: string;
    /** 휴일근무시간 */
    holidayHHmm?: string;
    /** 성명 */
    memberNm?: string;
    /** 야간근무시간 */
    nightOvertimeHHmm?: string;
    /** 비고 */
    note?: string;
    /** 회사명 */
    organizationNm?: string;
    /** 연장근무시간 */
    overtimeHHmm?: string;
    /** 문서번호 */
    stateCd?: 'DISPOSAL' | 'PROGRESS' | 'RETURN' | 'COMPLETION' | 'TEMPORARY';
    /** 근무유형 */
    title?: string;
    /** 총근무시간 */
    totalHHmm?: string;
    /** 근무종료일(신청) */
    workEndDate?: string;
    /** 근무종료시간(신청) */
    workEndTime?: string;
    /** 근무시작일(신청) */
    workStaDate?: string;
    /** 근무시작시간(신청) */
    workStaTime?: string;
  };
  /** 연장근무이력 저장 */
  OvertimeHistorySaveRequest: {
    /** 전자결재id */
    aprvId: string;
    /** 비고 */
    note?: string;
    /** 근무종료일자(신청) */
    workEndDate?: string;
    /** 근무종료시간(신청) */
    workEndTime?: string;
    /** 근무시작일자(신청) */
    workStaDate?: string;
    /** 근무시작시간(신청) */
    workStaTime?: string;
  };
  OvertimeRemainResponse: {
    /** 잔여 휴일근로 시간(분) */
    remainHolidayMins?: string;
    /** 잔여 휴일근로 시간 */
    remainHolidayTxt?: string;
    /** 잔여 야간근로 시간(분) */
    remainNightMins?: string;
    /** 잔여 야간근로 시간 */
    remainNightTxt?: string;
    /** 잔여 연장근로 시간(분) */
    remainOvertimeMins?: string;
    /** 잔여 연장근로 시간 */
    remainOvertimeTxt?: string;
    /** 연장근무 누적단위 */
    sumTypeCd?: 'WEEKLY' | 'MONTHLY';
  };
  /** 연장근무 이력 조회(캘린더) */
  OvertimeResponse: {
    /** 연장근무 유형 */
    overtimeTypeCd?: 'WEEKDAY' | 'HOLIDAY';
    /** 연장근무 시작일자 */
    attStaDateTime?: string;
    /** 연장근무 종료일자 */
    attEndDateTime?: string;
  };
  /** 연장근무 기준 조회(신청서) */
  OvertimeRuleResponse: {
    /** 최소 신청 시간 */
    minApplyHours?: number;
    /** 최대 신청 시간 */
    maxApplyHours?: number;
    /** 저녁 휴게시간 포함 여부 */
    dinnerBreakIncludeYn?: string;
    /** 저녁 휴게시간 */
    dinnerBreakTxt?: string;
    /** 사후 연장근무 신청 가능 기간 */
    afterApplyDays?: number;
    /** 연장근무 신청 시간 */
    overtimeApplyHm?: string[];
  };
  OvertimeSpecialLeaveDto: {
    /** 초과근무 유형 코드 */
    overtimeTypeCd: 'WEEKDAY' | 'HOLIDAY';
    /** 근태 코드 */
    attendCd: string;
    /** 특별휴가 사용 가능 시작일 */
    validStaDays: number;
    /** 특별휴가 사용 가능 종료일 */
    validEndDays: number;
    /** 휴가 사용 단위 */
    useTypeCd: 'HOUR' | 'DAY';
    /** 분할 사용 여부 */
    partUseYn: string;
    /** 휴게시간 포함 여부 */
    breakIncludeYn: string;
  };
  OvertimeWorkRequestContents: {
    applyReason?: string;
    overtimeTypeCd?: 'WEEKDAY' | 'HOLIDAY';
    workEndDate?: string;
    workEndTime?: string;
    workStaDate?: string;
    workStaTime?: string;
    workStdDate?: string;
  };
  /** 근무 기간 모델 */
  Schedule: {
    /** 근무 시작 일자 */
    staDate: string;
    /** 근무 시작 시간 */
    staTime: string;
    /** 근무 종료 일자 */
    endDate: string;
    /** 근무 종료 시간 */
    endTime: string;
  };
  /** 근태 유형 */
  ScheduleDetailDto: {
    /** 근무 명 */
    attendNm?: string;
    /** 근태 유형 */
    attendTypeCd?: 'DEDUCT_LEAVE' | 'SPECIAL_LEAVE' | 'HEALTH_LEAVE' | 'ETC';
    /** 근무 시작 시간 */
    attStaTime?: string;
    /** 근무 종료 시간 */
    attEndTime?: string;
  };
  ScheduleDetailUsageHistoryResponse: {
    /** 스케줄 id */
    odmScheduleDetailId?: string;
    /** 법인명 */
    organizationNm?: string;
    /** 부서 이름 */
    departmentNm?: string;
    /** 사용자 이름 */
    memberNm?: string;
    /** 근무 유형 */
    title?: string;
    /** 근태명 */
    attendNm?: string;
    /** 단위 */
    useTypeCd?: 'HOUR' | 'DAY';
    /** 근태 사용 시작일 */
    attStaDate?: string;
    /** 근태 사용 시작 시간 */
    attStaTime?: string;
    /** 근태 사용 종료일 */
    attEndDate?: string;
    /** 근태 사용 종료 시간 */
    attEndTime?: string;
    /** 근태 사용 시간 */
    useNum?: number;
    /** 근태 사유 */
    applyReason?: string;
    /** 상신일 */
    applyDate?: string;
    /** 승인 완료일 */
    aprvCmplDate?: string;
    /** 신청서 Id */
    aprvId?: string;
    /** 신청서명 */
    docNo?: string;
    /** 신청서 상태 */
    stateCd?: 'DISPOSAL' | 'PROGRESS' | 'RETURN' | 'COMPLETION' | 'TEMPORARY';
    /** 비고 */
    note?: string;
  };
  /** 근태 등록 */
  ScheduleSaveRequest: {
    /** 멤버 */
    memberId?: string;
    /** 조직 */
    organizationId?: string;
    /** 근태 정보 */
    workTime?: definitions['workTime'][];
  };
  /** 휴가 사용이력 수정 */
  ScheduleUpdateRequest: {
    /** 데이터 처리 Flag */
    saveStatus: 'UPDATE' | 'DELETE';
    /** 사용 단위 */
    useTypeCd: 'HOUR' | 'DAY';
    /** 근태 id */
    odmScheduleDetailId?: string;
    /** 근태 시작일 */
    attStaDate?: string;
    /** 근태 시작 시간 */
    attStaTime?: string;
    /** 근태 종료일 */
    attEndDate?: string;
    /** 근태 종료 시간 */
    attEndTime?: string;
    /** 근태 사유 */
    applyReason?: string;
    /** 신청서 상태 */
    stateCd?: 'DISPOSAL' | 'PROGRESS' | 'RETURN' | 'COMPLETION' | 'TEMPORARY';
    /** 비고 */
    note?: string;
  };
  SpecialLeaveHistoryResponse: {
    /** 근태 코드 */
    attendCd?: string;
    /** 부서명 */
    departmentNm?: string;
    /** 특별휴가 사용가능 종료일 */
    endDate?: string;
    /** 특별휴가 부여일 */
    giveDate?: string;
    /** 특별휴가 부여 사유 */
    giveReason?: string;
    /** 사용자 이름 */
    memberNm?: string;
    /** 비고 */
    note?: string;
    /** 발생 시간 */
    occurNum?: number;
    /** 특별휴가 id */
    odmSpecialLeaveId?: string;
    /** 법인명 */
    organizationNm?: string;
    /** 분할사용 가능 여부 */
    partUseYn?: string;
    /** 직책 */
    positionNm?: string;
    /** 남은 시간 */
    remainNum?: number;
    /** 특별휴가 사용가능 시작일 */
    staDate?: string;
    /** 사용 시간 */
    useNum?: number;
    /** 사용 가능 단위 */
    useTypeCd?: 'HOUR' | 'DAY';
  };
  SpecialLeaveUpdateRequest: {
    /** 데이터 처리 Flag */
    saveStatus: 'INSERT' | 'UPDATE' | 'DELETE' | 'READ';
    /** 특별휴가 id */
    odmSpecialLeaveId?: string;
    /** 사용자 id */
    memberId?: string;
    /** 법인 id */
    organizationId?: string;
    /** 근태 유형 코드 */
    attendCd?: string;
    /** 특별휴가 부여일 */
    giveDate?: string;
    /** 특별휴가 시작일 */
    staDate?: string;
    /** 특별휴가 종료일 */
    endDate?: string;
    /** 특별휴가 발생시간 */
    occurNum?: number;
    /** 특별휴가 사용시간 */
    useNum?: number;
    /** 분할사용 가능 여부 */
    partUseYn?: string;
    /** 사용 단위 */
    useTypeCd?: 'HOUR' | 'DAY';
    /** 사용 사유 */
    giveReason?: string;
    /** 비고 */
    note?: string;
  };
  /** 출퇴근 변경신청 이력 조회 */
  WorkScheduleApplyHistoryResponse: {
    /** 법인명 */
    organizationNm: string;
    /** 부서명 */
    departmentNm: string;
    /** 직원명 */
    empNm: string;
    /** 근무 시작 일자 */
    staDate: string;
    /** 근무 시작 시간 */
    staTime: string;
    /** 근무 종료 일자 */
    endDate: string;
    /** 근무 종료 시간 */
    endTime: string;
    /** 승인 id */
    aprvId: string;
    /** 승인 결재 상태 코드 */
    stateCd: 'DISPOSAL' | 'PROGRESS' | 'RETURN' | 'COMPLETION' | 'TEMPORARY';
    /** 문서 번호 */
    docNo: string;
    /** 신청 일자 */
    applyDate: string;
    /** 승인 일자 */
    cmplDate: string;
    /** 신청사유 */
    applyReason?: string;
    /** 비고 */
    note?: string;
  };
  /** 근무시간 변경 요청 */
  WorkScheduleChangeContents: {
    /** 변경 근무시간 목록 */
    workSchedule: definitions['Schedule'][];
    /** 변경 신청 사유 */
    reason: string;
    /** 결재 상신 일자 */
    draftDate?: string;
  };
  /** 부서별 근무시간 이력 조회 */
  WorkScheduleDepartmentHistoryResponse: {
    /** 일자 */
    date: string;
    /** 법인명 */
    organizationNm: string;
    /** 부서명 */
    departmentNm: string;
    /** 조직 멤버 ID */
    memberId: string;
    /** 근무유형 명 */
    title: string;
    /** 직원명 */
    empNm: string;
    /** 출근 시간 */
    staTime: string;
    /** 퇴근 시간 */
    endTime: string;
    /** 비고 */
    note: string;
  };
  /** 우리부서 근무시간 조회 */
  WorkScheduleDetailResponse: {
    /** 일자 */
    date: string;
    /** 조직 멤버 ID */
    memberId: string;
    /** 직원명 */
    memberNm: string;
    /** 부서Id */
    departmentId: string;
    /** 부서명 */
    departmentNm: string;
    /** 근무 시작 시간 */
    workingTimeStaTime: string;
    /** 근무 종료 시간 */
    workingTimeEndTime: string;
    /** 근무 시작 예정 시간 */
    workScheduleStaTime: string;
    /** 근무 종료 예정 시간 */
    workScheduleEndTime: string;
    /** 근태 목록 */
    attendList?: definitions['ScheduleDetailDto'][];
  };
  /** 근무시간 변경 정보 조회 */
  WorkScheduleDifferenceRequest: {
    /** 조직 멤버 ID */
    memberId: string;
    /** 근무시간 변경 정보 */
    workSchedule: definitions['Schedule'][];
  };
  /** 근무시간 변경 정보 조회 */
  WorkScheduleDifferenceResponse: {
    /** 초과/부족 시간 */
    diffHours: number;
  };
  /** 근무시간 이력 조회 */
  WorkScheduleHistoryResponse: {
    /** 일자 */
    date: string;
    /** 법인명 */
    organizationNm: string;
    /** 부서명 */
    departmentNm: string;
    /** 조직 멤버 ID */
    memberId: string;
    /** 직원명 */
    empNm: string;
    /** 출근 시간 */
    staTime: string;
    /** 퇴근 시간 */
    endTime: string;
    /** 비고 */
    note: string;
  };
  /** 근무시간 주간 집계 */
  WorkScheduleReportForWeeklyResponse: {
    /** 기준일자 */
    baseDateTime: string;
    /** 이번주 총 근무시간 */
    totalWorkTimeForWeek: string;
    /** 이번주 예정근무시간 */
    plannedWorkTimeForWeek: string;
    /** 이번주 연장근무시간 */
    overtimeWorkTimeForWeek: string;
  };
  /** 근무시간 집계 */
  WorkScheduleReportResponse: {
    /** 기준일자 */
    baseDateTime: string;
    /** 이번주 총 근무시간 */
    totalWorkTimeForWeek: string;
    /** 이번주 예정근무시간 */
    plannedWorkTimeForWeek: string;
    /** 이번주 연장근무시간 */
    overtimeWorkTimeForWeek: string;
    /** 이번달 총 근무시간 */
    totalWorkTimeForMonth: string;
    /** 이번달 예정근무시간 */
    plannedWorkTimeForMonth: string;
    /** 이번달 연장근무시간 */
    overtimeWorkTimeForMonth: string;
  };
  /** 근무시간 조회 */
  WorkScheduleResponse: {
    /** 근무 시작 시간 */
    staDateTime: string;
    /** 근무 종료 시간 */
    endDateTime: string;
  };
  /** 근무시간 기준 조회 */
  WorkScheduleRulesResponse: {
    /** 조직 ID */
    organizationId: string;
    /** 근무 유형 */
    workTypeStd: definitions['WorkTypeStdResponse'];
    /** 초과근무 기본 */
    overtimeStds: definitions['OvertimeDto'][];
    /** 초과근무 교통비 */
    overtimeCarfareStds: definitions['OverTimeCarfareDto'][];
    /** 초과근무 특별휴가 */
    overtimeSpecialLeaveStds: definitions['OvertimeSpecialLeaveDto'][];
  };
  /** 근무시간 이력 수정 요청 */
  WorkScheduleSaveRequest: {
    workSchedules?: definitions['Data'][];
  };
  /** 근무 유형 조회 */
  WorkTypeAllRulesResponse: {
    /** 근무유형 Id */
    odmWorkTypeId: string;
    /** 근무유형 */
    workTypeStd: definitions['WorkTypeStdResponse'];
    /** 초과근무 기본 */
    overtimeStds: definitions['OvertimeDto'][];
    /** 초과근무 교통비 */
    overtimeCarfareStds: definitions['OverTimeCarfareDto'][];
    /** 초과근무 특별휴가 */
    overtimeSpecialLeaveStds: definitions['OvertimeSpecialLeaveDto'][];
  };
  /** 개인별 근무 유형 */
  WorkTypeBaseResponse: {
    /** 근무유형 기준 Id */
    odmWorkTypeBaseId: string;
    /** 근무유형 Id */
    odmWorkTypeId: string;
    /** 근무유형 명 */
    title: string;
    /** 법인명 */
    organizationNm: string;
    /** 부서명 */
    departmentNm: string;
    /** 조직 멤버 ID */
    memberId: string;
    /** 직원명 */
    empNm: string;
    /** 시작 일자 */
    staDate: string;
    /** 종료 일자 */
    endDate: string;
    /** 비고 */
    note?: string;
  };
  /** 근무 유형 추가/수정/삭제 */
  WorkTypeBaseSaveRequest: {
    /** 저장 상태 코드 */
    saveStatus: 'INSERT' | 'UPDATE' | 'DELETE';
    /** 근무 유형 기본 */
    odmWorkTypeBaseId: string;
    /** 근무 유형 */
    odmWorkTypeId: string;
    /** 조직 멤버 ID */
    memberId: string;
    /** 조직 ID */
    organizationId: string;
    /** 시작 일자 */
    staDate: string;
    /** 종료 일자 */
    endDate: string;
    /** 비고 */
    note?: string;
  };
  WorkTypeRequest: {
    /** 업무 구분 Id */
    odmWorkTypeId?: string;
    /** 업무 구분명 */
    title: string;
    /** 기본 적용 여부 */
    defaultYn: string;
    /** 사용 여부 */
    useYn: string;
    /** 근무 유형 */
    typeCd: 'BASIC_WORK' | 'FLEXTIME_WORK' | 'SELECTIVE_WORK' | 'FLEXIBLE_WORK' | 'DISC_WORK';
    /** 시작 시간 */
    staTime: string;
    /** 종료 시간 */
    endTime: string;
    /** 점심식사 시작 시간 */
    lunchStaTime: string;
    /** 점심식사 종료 시간 */
    lunchEndTime: string;
    /** 저녁식사 시작 시간 */
    dinnerStaTime: string;
    /** 저녁식사 종료 시간 */
    dinnerEndTime: string;
    /** 저녁식사 시간 계산 여부 */
    dinnerTimeCalcYn?: string;
    /** 변경단위 */
    applyUnitType?: 'DAILY' | 'WEEKLY' | 'MONTHLY';
    /** 사후 신청 가능일 */
    afterApplyDays?: number;
    /** 최소 근무 시간 */
    minWorkHours?: number;
    /** 최대 근무 시간 */
    maxWorkHours?: number;
    /** 소정근로시간 체크단위 */
    workTimeCalcType?: 'DAILY' | 'WEEKLY' | 'MONTHLY';
    /** 코어타임 사용 여부 */
    coreTimeUseYn?: string;
    /** 코어타임 시작 시간 */
    coreStaTime?: string;
    /** 코어타임 종료 시간 */
    coreEndTime?: string;
    /** 출근 가능 시간 */
    enterAvailableUnits?: string;
    /** 퇴근 가능 시간 */
    leaveAvailableUnits?: string;
    /** 근무 가능 시간 */
    worktimeAvailableUnits?: string;
  };
  /** 근무 유형 */
  WorkTypeResponse: {
    /** 근무유형 Id */
    odmWorkTypeId: string;
    /** 기준일자 */
    date: string;
    /** 근무유형 명 */
    title: string;
    /** 기준 근무시작시간 */
    staTime: string;
    /** 기준 근무종료시간 */
    endTime: string;
    /** 점심식사 시작 시간 */
    lunchStaTime?: string;
    /** 점심식사 종료 시간 */
    lunchEndTime?: string;
    /** 저녁식사 시작 시간 */
    dinnerStaTime?: string;
    /** 저녁식사 종료 시간 */
    dinnerEndTime?: string;
    /** 저녁식사 시간 계산 여부 */
    dinnerTimeCalcYn?: string;
    /** 변경단위 */
    applyUnitType?: 'DAILY' | 'WEEKLY' | 'MONTHLY';
    /** 사후 신청 가능일 */
    afterApplyDays?: number;
    /** 최소 근무 시간 */
    minWorkHours?: number;
    /** 최대 근무 시간 */
    maxWorkHours?: number;
    /** 소정근로시간 체크단위 */
    workTimeCalcType?: 'DAILY' | 'WEEKLY' | 'MONTHLY';
    /** 코어타임 사용 여부 */
    coreTimeUseYn?: string;
    /** 코어타임 시작 시간 */
    coreStaTime?: string;
    /** 코어타임 종료 시간 */
    coreEndTime?: string;
    /** enter_available_units */
    enterAvailableUnits?: string;
    /** leave_available_units */
    leaveAvailableUnits?: string;
    /** worktime_available_units */
    worktimeAvailableUnits?: string;
  };
  /** 근무 유형 등록 */
  WorkTypeSaveRequest: {
    /** 조직 ID */
    organizationId: string;
    /** 근무 유형 */
    workTypeStd: definitions['WorkTypeRequest'];
    /** 초과근무 기본 */
    overtimeStds: definitions['OvertimeDto'][];
    /** 초과근무 교통비 */
    overtimeCarfareStds: definitions['OverTimeCarfareDto'][];
    /** 초과근무 특별휴가 */
    overtimeSpecialLeaveStds: definitions['OvertimeSpecialLeaveDto'][];
  };
  WorkTypeStdResponse: {
    /** 업무 구분 Id */
    odmWorkTypeId?: string;
    /** 업무 구분명 */
    title: string;
    /** 기본 적용 여부 */
    defaultYn: string;
    /** 사용 여부 */
    useYn: string;
    /** 근무 유형 */
    typeCd: 'BASIC_WORK' | 'FLEXTIME_WORK' | 'SELECTIVE_WORK' | 'FLEXIBLE_WORK' | 'DISC_WORK';
    /** 시작 시간 */
    staTime: string;
    /** 종료 시간 */
    endTime: string;
    /** 점심식사 시작 시간 */
    lunchStaTime: string;
    /** 점심식사 종료 시간 */
    lunchEndTime: string;
    /** 저녁식사 시작 시간 */
    dinnerStaTime: string;
    /** 저녁식사 종료 시간 */
    dinnerEndTime: string;
    /** 저녁식사 시간 계산 여부 */
    dinnerTimeCalcYn: string;
    /** 변경단위 */
    applyUnitType: 'DAILY' | 'WEEKLY' | 'MONTHLY';
    /** 사후 신청 가능일 */
    afterApplyDays: number;
    /** 최소 근무 시간 */
    minWorkHours: number;
    /** 최대 근무 시간 */
    maxWorkHours: number;
    /** 소정근로시간 체크단위 */
    workTimeCalcType?: 'DAILY' | 'WEEKLY' | 'MONTHLY';
    /** 코어타임 사용 여부 */
    coreTimeUseYn?: string;
    /** 코어타임 시작 시간 */
    coreStaTime?: string;
    /** 코어타임 종료 시간 */
    coreEndTime?: string;
    /** enter_available_units */
    enterAvailableUnits?: string;
    /** leave_available_units */
    leaveAvailableUnits?: string;
    /** worktime_available_units */
    worktimeAvailableUnits?: string;
  };
  /** 출퇴근 변경신청 이력 조회 */
  WorkingTimeApplyHistoryResponse: {
    /** 일자 */
    date: string;
    /** 법인명 */
    organizationNm: string;
    /** 부서명 */
    departmentNm: string;
    /** 조직 멤버 ID */
    memberId: string;
    /** 직원명 */
    empNm: string;
    /** 기존 출근 시간 */
    originStaTime: string;
    /** 기존 퇴근 시간 */
    originEndTime: string;
    /** 변경 출근 시간 */
    staTime: string;
    /** 변경 퇴근 시간 */
    endTime: string;
    /** 승인 id */
    aprvId: string;
    /** 문서 번호 */
    docNo: string;
    /** 신청 일자 */
    applyDate: string;
    /** 승인 일자 */
    cmplDate: string;
    /** 비고 */
    note?: string;
    /** 승인 진행 상태 코드 */
    statCd?: 'DISPOSAL' | 'PROGRESS' | 'RETURN' | 'COMPLETION' | 'TEMPORARY';
    /** 신청사유 */
    applyReason?: string;
  };
  /** 출퇴근 이력 조회 */
  WorkingTimeHistoryResponse: {
    /** 일자 */
    date: string;
    /** 법인명 */
    organizationNm: string;
    /** 부서명 */
    departmentNm: string;
    /** 조직 멤버 ID */
    memberId: string;
    /** 직원명 */
    empNm: string;
    /** 출근 시간 */
    staTime: string;
    /** 퇴근 시간 */
    endTime: string;
    /** 비고 */
    note?: string;
  };
  /** 출퇴근 기준 ip 정보 */
  WorkingTimeIpRequest: {
    /** Ip 주소 */
    ip: string;
    /** 설명 */
    description: string;
  };
  /** 출퇴근 기준 ip 정보 */
  WorkingTimeIpResponse: {
    /** Ip 주소 */
    ip: string;
    /** 설명 */
    description: string;
  };
  /** 출퇴근 요청 */
  WorkingTimeRequest: {
    /** 기준일자 */
    baseDate: string;
    /** 출퇴근 타입 */
    attendanceType: 'ENTER' | 'LEAVE';
  };
  /** 출퇴근 요청 결과 */
  WorkingTimeResponse: {
    /** 출근 시간 */
    enterDateTime: string;
    /** 퇴근 시간 */
    leaveDateTime?: string;
  };
  /** 근무시간 기준 */
  WorkingTimeRuleRequest: {
    /** 조직 ID */
    organizationId: string;
    /** 출근 허용 시작 시간 */
    enterStaTime: string;
    /** 출근 허용 종료 시간 */
    enterEndTime: string;
    /** 퇴근 허용 시작 시간 */
    leaveStaTime: string;
    /** 퇴근 허용 종료 시간 */
    leaveEndTime: string;
    /** 기준 시간 */
    baseTimezoneName: string;
    /** 출퇴근 기능 사용 유무 */
    useYn: string;
    /** Ip 목록 */
    ips?: definitions['WorkingTimeIpRequest'][];
  };
  /** 근무시간 기준 */
  WorkingTimeRuleResponse: {
    /** 조직 ID */
    organizationId: string;
    /** 출퇴근 기능 사용 여부 */
    useYn: string;
    /** 기준 시간 */
    baseTimezoneName: string;
    /** 출근 허용 시작 시간 */
    enterStaTime: string;
    /** 출근 허용 종료 시간 */
    enterEndTime: string;
    /** 퇴근 허용 시작 시간 */
    leaveStaTime: string;
    /** 퇴근 허용 종료 시간 */
    leaveEndTime: string;
    /** Ip 목록 */
    ips: definitions['WorkingTimeIpResponse'][];
  };
  /** 출퇴근 요청 */
  WorkingTimeSaveRequest: {
    workingTimes?: definitions['Data'][];
  };
  /** 근태 */
  workTime: {
    /** 근무 형태 */
    attendCd?: string;
    /** 단위 */
    useTypeCd?: 'HOUR' | 'DAY';
    /** 근무 시작 일자 */
    attStaDate?: string;
    /** 근무 시작 시간 */
    attStaTime?: string;
    /** 근무 종료 일자 */
    attEndDate?: string;
    /** 근무 종료 시간 */
    attEndTime?: string;
    /** 근무 사유 */
    applyReason?: string;
  };
}

export interface operations {
  healthCheckUsingGET: {
    responses: {
      /** OK */
      200: {
        schema: string;
      };
    };
  };
  retrieveAnnualLeaveOdmBaseUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 고용 형태 id */
        employmentTypeId?: string;
        /** 사용자 Id */
        memberId?: string;
        /** 조직 ID */
        organizationId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<AnnualLeaveOdmBaseRetrieveResponse>'];
      };
    };
  };
  updateAnnualLeaveOdmBaseDateUsingPUT: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      body: {
        /** requests */
        requests: definitions['AnnualLeaveOdmBaseUpdateRequest'][];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  retrieveAnnualLeaveRuleUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 조직 ID */
        organizationId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<AnnualLeaveRuleRetrieveResponse>'];
      };
    };
  };
  annualLeaveCudUsingPUT: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      body: {
        /** requests */
        requests: definitions['AnnualLeaveRuleCudRequest'][];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  retrieveAnnualLeaveUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      query: {
        /** 기준일 */
        baseDate: string;
        /** 고용 형태 코드 */
        employmentTypeId?: string;
        /** 이력 모두 보기 */
        includeHistoryYn?: 'Y' | 'N';
        /** 탈퇴한 사용자 포함 */
        includeLeaverYn?: 'Y' | 'N';
        /** 사용자 id */
        memberId?: string;
        /** 조직 id */
        organizationId: string;
        /** 재직 구분 코드 */
        statusCd?: 'MEMBER' | 'LEAVED';
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<AnnualLeaveOccurRetrieveResponse>'];
      };
    };
  };
  updateAnnualLeaveUsingPUT: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      body: {
        /** requests */
        requests: definitions['AnnualLeaveOccurUpdateRequest'][];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  createAnnualLeaveUsingPOST: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      body: {
        /** request */
        request: definitions['AnnualLeaveOccurCreateRequest'];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse'];
      };
    };
  };
  createAnnualLeaveBatchUsingPOST: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  simulateAnnualLeaveUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      query: {
        /** 기준일 */
        baseDate: string;
        memberId: string;
        organizationId: string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<AnnualLeaveOccurSimulateResponse>'];
      };
    };
  };
  getDaysUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 조회 종료 일자 */
        endDate: string;
        /** 법인 id */
        organizationId: string;
        /** 조회 시작 일자 */
        staDate: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<CalendarResponse>'];
      };
    };
  };
  updateDaysUsingPUT: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      body: {
        /** days */
        days: definitions['CalendarSaveRequest'];
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  insertDaysUsingPOST: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 법인 id */
        organizationId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  retrieveAttendCodeUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 조직 ID */
        organizationId: string;
        /** 사용여부 */
        useYn?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<AttendCodeUpdateResponse>'];
      };
    };
  };
  updateAttendCodeUsingPUT: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      body: {
        /** requests */
        requests: definitions['AttendCodeRequest'][];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  retrieveUsageHistoryLeaveOccurUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 종료일자 */
        endDate: string;
        /** 탈퇴한 사용자 포함 여부 */
        includeLeaverYn?: string;
        /** 사용자 id */
        memberId?: string;
        /** 조직 id */
        organizationId: string;
        /** 시작일자 */
        staDate: string;
        /** 결재상태 */
        stateCd?: 'DISPOSAL' | 'PROGRESS' | 'RETURN' | 'COMPLETION' | 'TEMPORARY';
        /** 단위 */
        useTypeCd?: 'HOUR' | 'DAY';
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<ScheduleDetailUsageHistoryResponse>'];
      };
    };
  };
  updateScheduleDetailUsingPUT: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      body: {
        /** requests */
        requests: definitions['ScheduleUpdateRequest'][];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  retrieveAttendCodeUsingGET_1: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      query: {
        /** 근태 유형 */
        attendTypeCd?: 'DEDUCT_LEAVE' | 'SPECIAL_LEAVE' | 'HEALTH_LEAVE' | 'ETC';
        /** 조직 ID */
        organizationId: string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<AttendCodeRetrieveResponse>'];
      };
    };
  };
  retrieveSpecialLeaveUsingGET_1: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 조직 멤버 ID */
        memberId?: string;
        /** 조직 ID */
        organizationId?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<OvertimeExcptRetrieveResponse>'];
      };
    };
  };
  executeBySaveStatusUsingPUT_1: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      body: {
        /** requests */
        requests: definitions['OvertimeExcptSaveRequest'][];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  retrieveOvertimeHistoryUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 조회 종료 일자 */
        endDate: string;
        /** 탈퇴한 사용자 포함 여부 */
        includeLeaverYn?: string;
        /** 조직 멤버 ID */
        memberId?: string;
        /** organizationId */
        organizationId: string;
        /** 연장근무 유형 */
        overtimeTypeCd: 'WEEKDAY' | 'HOLIDAY';
        /** 조회 시작 일자 */
        staDate: string;
        /** 결재상태 */
        stateCd?: 'DISPOSAL' | 'PROGRESS' | 'RETURN' | 'COMPLETION' | 'TEMPORARY';
        /** 근무 유형 */
        workTypeCd?: 'BASIC_WORK' | 'FLEXTIME_WORK' | 'SELECTIVE_WORK' | 'FLEXIBLE_WORK' | 'DISC_WORK';
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<OvertimeHistoryRetrieveResponse>'];
      };
    };
  };
  updateOvertimeHistoryUsingPUT: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      body: {
        /** requests */
        requests: definitions['OvertimeHistorySaveRequest'][];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  retrieveSpecialLeaveUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      query: {
        /** 근태 구분 */
        attendCd?: string;
        /** 종료일자 */
        endDate: string;
        /** 탈퇴한 사용자 포함 여부 */
        includeLeaverYn?: 'Y' | 'N';
        /** 조직 멤버 ID */
        memberId?: string;
        /** 조직 ID */
        organizationId?: string;
        /** 시작일자 */
        staDate: string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<SpecialLeaveHistoryResponse>'];
      };
    };
  };
  executeBySaveStatusUsingPUT: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      body: {
        /** requests */
        requests: definitions['SpecialLeaveUpdateRequest'][];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  /** 근무시간 변경신청 이력을 조회한다. */
  getWorkingTimeApplyHistoryUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 조회 종료 일자 */
        endDate: string;
        /** 탈퇴한 사용자 포함 여부 */
        includeLeaverYn: string;
        /** 직원 id */
        memberId?: string;
        /** 조직 id */
        organizationId: string;
        /** 조회 시작 일자 */
        staDate: string;
        /** 결재 상태 코드 */
        stateCd?: 'DISPOSAL' | 'PROGRESS' | 'RETURN' | 'COMPLETION' | 'TEMPORARY';
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<WorkScheduleApplyHistoryResponse>'];
      };
    };
  };
  /** 근무시간 이력을 조회한다. */
  getWorkSchedulesUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 조회 종료 일자 */
        endDate: string;
        /** 탈퇴한 사용자 포함 여부 */
        includeLeaverYn: string;
        /** 직원 id */
        memberId?: string;
        /** 조직 id */
        organizationId: string;
        /** 조회 시작 일자 */
        staDate: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<WorkScheduleHistoryResponse>'];
      };
    };
  };
  /** 근무시간 이력을 수정한다. */
  updateWorkSchedulesUsingPUT: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      body: {
        /** body */
        body: definitions['WorkScheduleSaveRequest'];
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  /** 개인별 근무유형 조회 */
  getWorkTypeBasesUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 조직 멤버 ID */
        memberId?: string;
        /** 조직 ID */
        organizationId: string;
        /** 소속 */
        searchDepartmentNm?: string;
        /** 근무 유형 */
        workTypeCd?: 'BASIC_WORK' | 'FLEXTIME_WORK' | 'SELECTIVE_WORK' | 'FLEXIBLE_WORK' | 'DISC_WORK';
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<WorkTypeBaseResponse>'];
      };
    };
  };
  /** 개인별 근무유형 수정 */
  updateWorkTypeBasesUsingPUT: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      body: {
        /** body */
        body: definitions['WorkTypeBaseSaveRequest'][];
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  /** 근무유형 조회 */
  getWorkTypesUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 조직 ID */
        organizationId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<WorkTypeAllRulesResponse>'];
      };
    };
  };
  /** 근무유형 추가 */
  insertUsingPOST: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      body: {
        /** body */
        body: definitions['WorkTypeSaveRequest'];
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  /** 근무유형 수정 */
  updateUsingPUT: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      body: {
        /** body */
        body: definitions['WorkTypeSaveRequest'];
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
        /** 근무유형 Id */
        workTypeId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  /** 근무유형 삭제 */
  deleteUsingDELETE: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
        /** 근무유형 Id */
        workTypeId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  /** 츨/퇴근 변경신청 이력을 조회한다. */
  getWorkingTimeApplyHistoryUsingGET_1: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 조회 종료 일자 */
        endDate: string;
        /** 탈퇴한 사용자 포함 여부 */
        includeLeaverYn: string;
        /** 직원 id */
        memberId?: string;
        /** 조직 id */
        organizationId: string;
        /** 조회 시작 일자 */
        staDate: string;
        /** 결재 상태 코드 */
        stateCd?: 'DISPOSAL' | 'PROGRESS' | 'RETURN' | 'COMPLETION' | 'TEMPORARY';
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<WorkingTimeApplyHistoryResponse>'];
      };
    };
  };
  /** 출퇴근 기준을 조회한다. */
  getWorkingTimeRulesUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 조직 id */
        organizationId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<WorkingTimeRuleResponse>'];
      };
    };
  };
  /** 출퇴근 기준 내용을 수정한다. */
  updateWorkingTimeRuleUsingPUT: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      body: {
        /** body */
        body: definitions['WorkingTimeRuleRequest'];
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  /** 츨/퇴근 이력을 조회한다. */
  getWorkingTimeHistoryUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 조회 종료 일자 */
        endDate: string;
        /** 탈퇴한 사용자 포함 여부 */
        includeLeaverYn: string;
        /** 직원 id */
        memberId?: string;
        /** 조직 id */
        organizationId: string;
        /** 조회 시작 일자 */
        staDate: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<WorkingTimeHistoryResponse>'];
      };
    };
  };
  /** 츨/퇴근 이력을 수정한다. */
  updateWorkingTimesUsingPUT: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      body: {
        /** body */
        body: definitions['WorkingTimeSaveRequest'];
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  deleteTenantUsingDELETE: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  createAnnualLeaveBatchUsingPOST_1: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id'?: string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  /** 문서 action 처리 */
  doProcessApprovalUsingPUT: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      body: {
        /** approvalRequest */
        approvalRequest: definitions['ApprovalRequest'];
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  deleteOrganizationUsingDELETE: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
        /** 조직 ID */
        organizationId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  unusedOrganizationUsingPOST: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
        /** 조직 ID */
        organizationId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  createOrganizationUsingPOST: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
        /** 조직 ID */
        organizationId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  unusedTenantUsingPOST: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  retrieveOffDutyForManagerUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      query: {
        /** 부서 id */
        departmentId?: string;
        /** 종료일자 */
        endDate: string;
        /** 사용자 id */
        memberId?: string;
        /** 시작일자 */
        staDate: string;
        /** 단위 */
        useTypeCd?: 'HOUR' | 'DAY';
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<OffDutyForManagerResponse>'];
      };
    };
  };
  retrieveOvertimeHistoryUsingGET_1: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      query: {
        /** 부서 id */
        departmentId?: string;
        /** 조회 종료 일자 */
        endDate: string;
        /** 조직 멤버 ID */
        memberId?: string;
        /** 연장근무 유형 */
        overtimeTypeCd: 'WEEKDAY' | 'HOLIDAY';
        /** 조회 시작 일자 */
        staDate: string;
        /** 근무 유형 */
        workTypeCd?: 'BASIC_WORK' | 'FLEXTIME_WORK' | 'SELECTIVE_WORK' | 'FLEXIBLE_WORK' | 'DISC_WORK';
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<OvertimeDepartmentHistoryRetrieveResponse>'];
      };
    };
  };
  /** 근무시간 이력을 조회한다. */
  getWorkSchedulesUsingGET_2: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      query: {
        /** 부서 id */
        departmentId?: string;
        /** 조회 종료 일자 */
        endDate: string;
        /** 직원 id */
        memberId?: string;
        /** 조회 시작 일자 */
        staDate: string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<WorkScheduleDepartmentHistoryResponse>'];
      };
    };
  };
  /** 부서별 츨/퇴근 이력을 조회한다. */
  getWorkingTimeHistoryUsingGET_1: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      query: {
        /** 부서 Id */
        departmentId?: string;
        /** 조회 종료 일자 */
        endDate: string;
        /** 직원 Id */
        memberId?: string;
        /** 조회 시작 일자 */
        staDate: string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<WorkingTimeHistoryResponse>'];
      };
    };
  };
  getDaysUsingGET_1: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 조회 종료 일자 */
        endDate: string;
        /** 조회 시작 일자 */
        staDate: string;
        type: 'holiday';
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<CalendarResponse>'];
      };
    };
  };
  /** code 조회 */
  getCodeGroupsUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<CodeGroupResponse>'];
      };
    };
  };
  getSubDepartmentsUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<DepartmentResponse>'];
      };
    };
  };
  /** 본문조회 */
  getContentsUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** approvalId */
        approvalId: string;
        /** documentCode */
        documentCode: 'WORK001' | 'WORK002' | 'WORK003' | 'WORK004' | 'WORK005' | 'WORK006' | 'WORK007';
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<object>'];
      };
    };
  };
  saveOvertimeApplyUsingPOST: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      body: {
        /** request */
        request: definitions['OvertimeWorkRequestContents'];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  getOvertimeRemainHoursUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      query: {
        /** 기준일 */
        baseDate: string;
        /** overtimeTypeCd */
        overtimeTypeCd: 'WEEKDAY' | 'HOLIDAY';
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
        memberId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<OvertimeRemainResponse>'];
      };
    };
  };
  getOffDutiesUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 종료일자 */
        endDate: string;
        /** 시작일자 */
        staDate: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<OffDutyResponse>'];
      };
    };
  };
  retrieveScheduleDetailUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 종료일자 */
        endDate?: string;
        /** 사용자 id */
        memberId?: string;
        /** 시작일자 */
        staDate?: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<OffDutyIntegrationResponse>'];
      };
    };
  };
  saveOffDutyUsingPOST: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      body: {
        /** request */
        request: definitions['ScheduleSaveRequest'];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  attendanceCancelRequestUsingPOST: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      body: {
        /** contents */
        contents: definitions['AttendanceCancelRequestContents'];
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  retrieveOffDutyDetailsUsingGET: {
    parameters: {
      header: {
        /** 테넌트 DB ID */
        'Dooray-Db-Id'?: string;
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 근태 id */
        odmScheduleDetailId: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<OffDutyDetailResponse>'];
      };
    };
  };
  retrieveOffDutyUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      query: {
        /** 기준일 */
        baseDate?: string;
        /** 조직 멤버 ID */
        memberId?: string;
        /** 조직 ID */
        organizationId?: string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<OffDutyReportsResponse>'];
      };
    };
  };
  getOvertimeRulesForApplyUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      query: {
        /** 기준일자 */
        baseDate: string;
        /** 연장근무 유형 */
        overtimeTypeCd: 'WEEKDAY' | 'HOLIDAY';
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<OvertimeRuleResponse>'];
      };
    };
  };
  getOffDutiesUsingGET_1: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 종료일자 */
        endDate: string;
        /** 시작일자 */
        staDate: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<OvertimeResponse>'];
      };
    };
  };
  /** 근무시간 변경 정보 조회 */
  differenceWorkscheduleUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      body: {
        /** request */
        request: definitions['WorkScheduleDifferenceRequest'];
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<WorkScheduleDifferenceResponse>'];
      };
    };
  };
  /** 근무시간 시간변경 요청 */
  applyWorkScheduleChangeUsingPOST: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      body: {
        /** body */
        body: definitions['WorkScheduleChangeContents'];
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  /** 우리부서 근무시간 조회 */
  getWorkScheduleDetailsUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      query: {
        /** 조회 기준 일자 */
        baseDate: string;
        /** 직원 id */
        memberId: string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<WorkScheduleDetailResponse>'];
      };
    };
  };
  /** 근무시간 집계 조회 */
  getWorkScheduleReportsUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      query: {
        /** 조회 기준 일자 */
        baseDate: string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<WorkScheduleReportResponse>'];
      };
    };
  };
  /** 근무시간 기준 조회 */
  getWorkScheduleRulesUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      query: {
        /** 조회 기준 일자 */
        baseDate?: string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<WorkScheduleRulesResponse>'];
      };
    };
  };
  /** 근무시간 주간 집계 조회 */
  getWorkScheduleWeeklyReportsUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      query: {
        /** 조회 기준 일자 */
        baseDate: string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<WorkScheduleReportForWeeklyResponse>'];
      };
    };
  };
  /** 근무시간 조회 */
  getWorkSchedulesUsingGET_1: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 종료 일자 */
        endDate: string;
        /** 시작 일자 */
        staDate: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<WorkScheduleResponse>'];
      };
    };
  };
  /** 근무유형을 조회한다 */
  getWorkTypeUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      query: {
        /** 조회 기준 일자 */
        baseDate: string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<WorkTypeResponse>'];
      };
    };
  };
  /** 출/퇴근 시간변경 요청 */
  applyWorkingTimeChangeUsingPOST: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      body: {
        /** body */
        body: definitions['CommuteChangeContents'];
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
  /** 츨/퇴근 기준 조회 */
  getWorkingTimeRulesUsingGET_1: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<WorkingTimeRuleResponse>'];
      };
    };
  };
  /** 출/퇴근 데이터 조회 */
  getWorkingTimeUsingGET: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
      query: {
        /** 조회 종료 일자 */
        endDate: string;
        /** 조회 시작 일자 */
        staDate: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponses<WorkingTimeResponse>'];
      };
    };
  };
  /** 츨/퇴근 요청 */
  saveWorkingTimeUsingPOST: {
    parameters: {
      header: {
        /** 조직 멤버 ID */
        'Dooray-Member-Id': string;
      };
      body: {
        /** body */
        body: definitions['WorkingTimeRequest'];
      };
      path: {
        /** 테넌트 도메인 */
        domain: string;
      };
    };
    responses: {
      /** OK */
      200: {
        schema: definitions['ApiResponse<Void>'];
      };
    };
  };
}

export interface external {}
